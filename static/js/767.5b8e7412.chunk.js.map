{"version":3,"file":"static/js/767.5b8e7412.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetailsStyled.jsx","components/MovieDetails/MovieDetails.jsx","components/useFilms.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieDetailsButton = styled.button`\n  padding: 5px;\n  margin-right: 10px;\n  height: 30px;\n  border-radius: 0px;\n  border-width: 0px;\n  background-color: #ff9900;\n  color: white;\n  font-size: 15px;\n  text-decoration: none;\n\n  &:hover {\n    background-color: #ff8800;\n  }\n`;\n","import { useNavigate, useParams, Outlet, useLocation } from 'react-router-dom';\nimport useFilms from 'components/useFilms';\nimport { MovieDetailsButton } from './MovieDetailsStyled';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { filmData } = useFilms(`movie/${movieId}?`);\n\n  const handleClick = evt => {\n    navigate(evt.target.value);\n  };\n\n  const handleBack = () => {\n    navigate(location.state?.from ?? '/');\n  };\n\n  const { title, release_date, overview, genres, vote_average, poster_path } =\n    filmData;\n  return (\n    <div>\n      <MovieDetailsButton onClick={handleBack}> Go Back</MovieDetailsButton>\n      <img src={`https://image/tmdb.org/t/p/w400/${poster_path}`} alt=\"\" />\n      <h2>\n        {title} {release_date?.slice(0, 4)}\n      </h2>\n      <p> User score: {vote_average}</p>\n      <h3> Overview</h3>\n      <p> {overview}</p>\n      <h3> Genres</h3>\n      {genres?.map(gen => (\n        <span key={gen.id}>{gen.name}</span>\n      ))}\n      <p> Additional information</p>\n\n      <MovieDetailsButton value=\"Cast\" onClick={handleClick}>\n        Cast\n      </MovieDetailsButton>\n      <MovieDetailsButton value=\"Reviews\" onClick={handleClick}>\n        Reviews\n      </MovieDetailsButton>\n      <Outlet />\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nconst apiKey = 'api_key=39ffc17877ae637e34c517b3cb306e6a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst useFilms = query => {\n  const [filmData, setFilmList] = useState([]);\n  const [isLoading, setIsLoading] = useState([false]);\n  const [error, setError] = useState([false]);\n\n  useEffect(() => {\n    const getFilms = async () => {\n      setIsLoading(true);\n      const { data } = await axios.get(`${query}${apiKey}`);\n      setFilmList(data);\n      setIsLoading(false);\n    };\n    getFilms().catch(error => {\n      setError(true);\n      setIsLoading(false);\n    });\n  }, [query]);\n\n  return { filmData, isLoading, error };\n};\n\nexport default useFilms;\n"],"names":["MovieDetailsButton","styled","_templateObject","_taggedTemplateLiteral","MovieDetails","movieId","useParams","navigate","useNavigate","location","useLocation","filmData","useFilms","concat","handleClick","evt","target","value","title","release_date","overview","genres","vote_average","poster_path","_jsxs","children","_jsx","onClick","_location$state$from","_location$state","state","from","src","alt","slice","map","gen","name","id","Outlet","axios","query","_useState","useState","_useState2","_slicedToArray","setFilmList","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","getFilms","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","stop","apply","arguments","catch"],"sourceRoot":""}